/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './renderer/src/routes/__root'
import { Route as ResultsRouteImport } from './renderer/src/routes/results'
import { Route as LobbyRouteImport } from './renderer/src/routes/lobby'
import { Route as GameRouteImport } from './renderer/src/routes/game'
import { Route as AboutRouteImport } from './renderer/src/routes/about'
import { Route as IndexRouteImport } from './renderer/src/routes/index'
import { Route as RoomCodeRouteImport } from './renderer/src/routes/room.$code'

const ResultsRoute = ResultsRouteImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => rootRouteImport,
} as any)
const LobbyRoute = LobbyRouteImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => rootRouteImport,
} as any)
const GameRoute = GameRouteImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomCodeRoute = RoomCodeRouteImport.update({
  id: '/room/$code',
  path: '/room/$code',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRoute
  '/lobby': typeof LobbyRoute
  '/results': typeof ResultsRoute
  '/room/$code': typeof RoomCodeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRoute
  '/lobby': typeof LobbyRoute
  '/results': typeof ResultsRoute
  '/room/$code': typeof RoomCodeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/game': typeof GameRoute
  '/lobby': typeof LobbyRoute
  '/results': typeof ResultsRoute
  '/room/$code': typeof RoomCodeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/game' | '/lobby' | '/results' | '/room/$code'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/game' | '/lobby' | '/results' | '/room/$code'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/game'
    | '/lobby'
    | '/results'
    | '/room/$code'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  GameRoute: typeof GameRoute
  LobbyRoute: typeof LobbyRoute
  ResultsRoute: typeof ResultsRoute
  RoomCodeRoute: typeof RoomCodeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/results': {
      id: '/results'
      path: '/results'
      fullPath: '/results'
      preLoaderRoute: typeof ResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lobby': {
      id: '/lobby'
      path: '/lobby'
      fullPath: '/lobby'
      preLoaderRoute: typeof LobbyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/room/$code': {
      id: '/room/$code'
      path: '/room/$code'
      fullPath: '/room/$code'
      preLoaderRoute: typeof RoomCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GameRoute: GameRoute,
  LobbyRoute: LobbyRoute,
  ResultsRoute: ResultsRoute,
  RoomCodeRoute: RoomCodeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
